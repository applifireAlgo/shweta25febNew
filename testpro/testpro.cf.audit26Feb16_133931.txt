// Spring Roo 1.2.5.RELEASE [rev 8341dc2] log opened at 2016-02-26 13:38:54
 development mode --enabled true 
buzzproperties codeStatus --PropertyFileName status --key Address --value 1
buzzorclass add --className ~.app.shared.location.Address --implements java.io.Serializable,com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface --implementsGenericType java.util.Comparator#com.app.shared.location.Address --annotation javax.persistence.Table,javax.persistence.Entity,org.eclipse.persistence.annotations.Cache,com.athena.annotation.SourceCodeAuthorClass --key type.org.eclipse.persistence.annotations.Cache,isolation.org.eclipse.persistence.annotations.Cache,size.org.eclipse.persistence.annotations.Cache,expiry.org.eclipse.persistence.annotations.Cache,alwaysRefresh.org.eclipse.persistence.annotations.Cache,disableHits.org.eclipse.persistence.annotations.Cache,name.javax.persistence.Table,createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value org.eclipse.persistence.annotations.CacheType$CACHE#org.eclipse.persistence.annotations.CacheType,org.eclipse.persistence.config.CacheIsolationType$ISOLATED#org.eclipse.persistence.config.CacheIsolationType,64000.org.eclipse.persistence.annotations.Cache,1.org.eclipse.persistence.annotations.Cache,TRUE.org.eclipse.persistence.annotations.Cache,TRUE.org.eclipse.persistence.annotations.Cache,ast_Address_T.javax.persistence.Table,nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass,nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass,2.com.athena.annotation.SourceCodeAuthorClass,Address.com.athena.annotation.SourceCodeAuthorClass,com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity --value_type javaType,javaType,Integer,Integer,Boolean,Boolean,String,String,String,String,String,javaType
Persistent add entity --entityName com.app.shared.location.Address
buzzorfield create --type ~.app.shared.location.Address --field_name addressLabel --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value addressLabel.javax.persistence.Column,addressLabel.com.fasterxml.jackson.annotation.JsonProperty
fieldAnnotation create --type ~.app.shared.location.Address --field_name addressLabel --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#11
buzzorfield create --type ~.app.shared.location.Address --field_name address1 --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value address1.javax.persistence.Column,address1.com.fasterxml.jackson.annotation.JsonProperty
fieldAnnotation create --type ~.app.shared.location.Address --field_name address1 --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#56
buzzorfield create --type ~.app.shared.location.Address --field_name address2 --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value address2.javax.persistence.Column,address2.com.fasterxml.jackson.annotation.JsonProperty
fieldAnnotation create --type ~.app.shared.location.Address --field_name address2 --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#56
buzzorfield create --type ~.app.shared.location.Address --field_name address3 --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value address3.javax.persistence.Column,address3.com.fasterxml.jackson.annotation.JsonProperty
fieldAnnotation create --type ~.app.shared.location.Address --field_name address3 --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#56
buzzorfield create --type ~.app.shared.location.Address --field_name zipcode --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value zipcode.javax.persistence.Column,zipcode.com.fasterxml.jackson.annotation.JsonProperty
fieldAnnotation create --type ~.app.shared.location.Address --field_name zipcode --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1
fieldAnnotation create --type ~.app.shared.location.Address --field_name zipcode --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#6
buzzorfield create --type ~.app.shared.location.Address --field_name latitude --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value latitude.javax.persistence.Column,latitude.com.fasterxml.jackson.annotation.JsonProperty
fieldAnnotation create --type ~.app.shared.location.Address --field_name latitude --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#64
buzzorfield create --type ~.app.shared.location.Address --field_name longitude --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value longitude.javax.persistence.Column,longitude.com.fasterxml.jackson.annotation.JsonProperty
fieldAnnotation create --type ~.app.shared.location.Address --field_name longitude --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#64
buzzorfield create --type ~.app.shared.location.Address --field_name primaryKey --dataType java.lang.String --Modifier private --annotation javax.persistence.Transient
buzzorfield create --type ~.app.shared.location.Address --field_name addressId --dataType java.lang.String --Modifier private --valueType String,String,String --annotation javax.persistence.Id,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty,javax.persistence.GeneratedValue --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty,generator.javax.persistence.GeneratedValue --value addressId.javax.persistence.Column,addressId.com.fasterxml.jackson.annotation.JsonProperty,UUIDGenerator.javax.persistence.GeneratedValue
fieldAnnotation create --type ~.app.shared.location.Address --field_name addressId --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#64
buzzorfield create --type ~.app.shared.location.Address --field_name addressTypeId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value addressTypeId.javax.persistence.Column,addressTypeId.com.fasterxml.jackson.annotation.JsonProperty
buzzorfield create --type ~.app.shared.location.Address --field_name countryId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value countryId.javax.persistence.Column,countryId.com.fasterxml.jackson.annotation.JsonProperty
buzzorfield create --type ~.app.shared.location.Address --field_name stateId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value stateId.javax.persistence.Column,stateId.com.fasterxml.jackson.annotation.JsonProperty
buzzorfield create --type ~.app.shared.location.Address --field_name cityId --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value cityId.javax.persistence.Column,cityId.com.fasterxml.jackson.annotation.JsonProperty
buzzorfield create --type ~.app.shared.location.Address --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --annotation javax.persistence.Transient,com.fasterxml.jackson.annotation.JsonIgnore
buzzorfield create --type ~.app.shared.location.Address --field_name versionId --dataType Integer --Modifier private --annotation javax.persistence.Version,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value versionId.javax.persistence.Column,versionId.com.fasterxml.jackson.annotation.JsonProperty --valueType String,String
buzzorfield create --type ~.app.shared.location.Address --field_name entityAudit --dataType com.app.shared.EntityAudit --Modifier private --annotation javax.persistence.Embedded,com.fasterxml.jackson.annotation.JsonIgnore --initializer "new EntityAudit()"
buzzorfield create --type ~.app.shared.location.Address --field_name systemInfo --dataType com.app.shared.SystemInfo --Modifier private --annotation javax.persistence.Embedded --initializer "new SystemInfo()"
buzzorfield create --type ~.app.shared.location.Address --field_name primaryDisplay --dataType String --Modifier private --annotation javax.persistence.Transient
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName addressLabel --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName address1 --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName address2 --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName address3 --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName zipcode --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName latitude --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName longitude --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName primaryKey --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName addressId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName addressTypeId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName countryId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName stateId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName cityId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName versionId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName primaryDisplay --getterMethod false --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.location.Address --variableName systemInfo --getterMethod true --setterMethod true
methodoperation type hardDelete --entityName ~.app.shared.location.Address
methodoperation type setValidator --class ~.app.shared.location.Address
methodoperation type setLoggedUserInfo --class ~.app.shared.location.Address --updateFieldName updatedBy --createFieldName createdBy --activeFieldName activeStatus --isAggregate false
methodoperation type comparatorDefaultBody --class ~.app.shared.location.Address
methodoperation type getPrimayDisplay --class ~.app.shared.location.Address --variableName zipcode
methodoperation type toString --class ~.app.shared.location.Address
methodoperation type hashCode --class ~.app.shared.location.Address --primaryClass true
methodoperation type equals --class ~.app.shared.location.Address --primaryClass true
buzzormethod add --toClass ~.app.shared.location.Address --method_name isEntityValidated --modifier public --return_type boolean --method_body "return this.systemInfo.isEntityValidated();" --annotation com.fasterxml.jackson.annotation.JsonIgnore --key "" --value ""
class --abstract true --class ~.app.server.service.AddressService
buzzorclass add --className ~.app.server.service.AddressServiceImpl  --extends com.app.server.service.AddressService --value_type string --annotation org.springframework.web.bind.annotation.RestController
Class createAnnotation --toClass ~.app.server.service.AddressServiceImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype
Class createAnnotation --toClass ~.app.server.service.AddressService --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#2.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for Address Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
Class createAnnotation --toClass ~.app.server.service.AddressServiceImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#2.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for Address Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
interfacebuzzor add --InterfaceName ~.app.server.repository.AddressRepository --genericType T --extends com.athena.server.repository.SearchInterface
buzzorclass add --className ~.app.server.repository.AddressRepositoryImpl --implements --extends com.athena.server.repository.SearchInterfaceImpl --value_type string --implementsGenericType com.app.server.repository.AddressRepository#com.app.shared.location.Address --annotation org.springframework.stereotype.Repository
Class createAnnotation --toClass ~.app.server.repository.AddressRepositoryImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype
Class createAnnotation --toClass ~.app.server.repository.AddressRepository --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#2.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for Address Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
Class createAnnotation --toClass ~.app.server.repository.AddressRepositoryImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#2.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for Address Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
buzzorfield create --type ~.app.server.repository.AddressRepositoryImpl --field_name emfResource --dataType com.athena.config.server.helper.ResourceFactoryManagerHelper --Modifier private --annotation org.springframework.beans.factory.annotation.Autowired
methodoperation type ENTITY --entityName ~.app.shared.location.Address --readOnly false --controllerClass ~.app.server.service.AddressService  --controllerImplClass ~.app.server.service.AddressServiceImpl --repositoryClass ~.app.server.repository.AddressRepository --repositoryImplClass ~.app.server.repository.AddressRepositoryImpl --methodType findAll --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.AddressBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.location.Address --readOnly false --controllerClass ~.app.server.service.AddressService  --controllerImplClass ~.app.server.service.AddressServiceImpl --repositoryClass ~.app.server.repository.AddressRepository --repositoryImplClass ~.app.server.repository.AddressRepositoryImpl --methodType show --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.AddressBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.location.Address --readOnly false --controllerClass ~.app.server.service.AddressService  --controllerImplClass ~.app.server.service.AddressServiceImpl --repositoryClass ~.app.server.repository.AddressRepository --repositoryImplClass ~.app.server.repository.AddressRepositoryImpl --methodType save --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.AddressBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.location.Address --readOnly false --controllerClass ~.app.server.service.AddressService  --controllerImplClass ~.app.server.service.AddressServiceImpl --repositoryClass ~.app.server.repository.AddressRepository --repositoryImplClass ~.app.server.repository.AddressRepositoryImpl --methodType delete --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.AddressBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.location.Address --readOnly false --controllerClass ~.app.server.service.AddressService  --controllerImplClass ~.app.server.service.AddressServiceImpl --repositoryClass ~.app.server.repository.AddressRepository --repositoryImplClass ~.app.server.repository.AddressRepositoryImpl --methodType update --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.AddressBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.location.Address --readOnly false --controllerClass ~.app.server.service.AddressService  --controllerImplClass ~.app.server.service.AddressServiceImpl --repositoryClass ~.app.server.repository.AddressRepository --repositoryImplClass ~.app.server.repository.AddressRepositoryImpl --methodType search --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.AddressBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type BusinessService --sevicePath ~.app.server.service.AddressServiceImpl --fieldName addressTypeId --fieldType String
namedQuery insert --toClass ~.app.shared.location.Address --queryName Address.DefaultFinders --queryValue "select e from Address e where e.systemInfo.activeStatus=1 and e.addressTypeId LIKE :addressTypeId"
namedQuery insert --toClass ~.app.shared.location.Address --queryName Address.findByAddressTypeId --queryValue "select e from Address e where e.systemInfo.activeStatus=1 and e.addressTypeId=:addressTypeId"
methodoperation type namedQueryMethod --queryName Address.findByAddressTypeId --qvalue "select e from Address e where e.systemInfo.activeStatus=1 and e.addressTypeId=:addressTypeId" --qarameteres addressTypeId --typeOfParameteres java.lang.String --entityName ~.app.shared.location.Address --controllerClass ~.app.server.service.AddressService --controllerImplClass ~.app.server.service.AddressServiceImpl --repositoryClass ~.app.server.repository.AddressRepository --repositoryImplClass ~.app.server.repository.AddressRepositoryImpl --businessServiceClass ~.app.server.businessservice.AddressbzService --returnType java.util.List<com.app.shared.location.Address> --isFindByID true --isUserAccess false --isMultitenant false --refEntity com.app.shared.location.AddressType
namedQuery insert --toClass ~.app.shared.location.Address --queryName Address.findByCountryId --queryValue "select e from Address e where e.systemInfo.activeStatus=1 and e.countryId=:countryId"
methodoperation type namedQueryMethod --queryName Address.findByCountryId --qvalue "select e from Address e where e.systemInfo.activeStatus=1 and e.countryId=:countryId" --qarameteres countryId --typeOfParameteres java.lang.String --entityName ~.app.shared.location.Address --controllerClass ~.app.server.service.AddressService --controllerImplClass ~.app.server.service.AddressServiceImpl --repositoryClass ~.app.server.repository.AddressRepository --repositoryImplClass ~.app.server.repository.AddressRepositoryImpl --businessServiceClass ~.app.server.businessservice.AddressbzService --returnType java.util.List<com.app.shared.location.Address> --isFindByID true --isUserAccess false --isMultitenant false --refEntity com.app.shared.location.Country
namedQuery insert --toClass ~.app.shared.location.Address --queryName Address.findByStateId --queryValue "select e from Address e where e.systemInfo.activeStatus=1 and e.stateId=:stateId"
methodoperation type namedQueryMethod --queryName Address.findByStateId --qvalue "select e from Address e where e.systemInfo.activeStatus=1 and e.stateId=:stateId" --qarameteres stateId --typeOfParameteres java.lang.String --entityName ~.app.shared.location.Address --controllerClass ~.app.server.service.AddressService --controllerImplClass ~.app.server.service.AddressServiceImpl --repositoryClass ~.app.server.repository.AddressRepository --repositoryImplClass ~.app.server.repository.AddressRepositoryImpl --businessServiceClass ~.app.server.businessservice.AddressbzService --returnType java.util.List<com.app.shared.location.Address> --isFindByID true --isUserAccess false --isMultitenant false --refEntity com.app.shared.location.State
namedQuery insert --toClass ~.app.shared.location.Address --queryName Address.findByCityId --queryValue "select e from Address e where e.systemInfo.activeStatus=1 and e.cityId=:cityId"
methodoperation type namedQueryMethod --queryName Address.findByCityId --qvalue "select e from Address e where e.systemInfo.activeStatus=1 and e.cityId=:cityId" --qarameteres cityId --typeOfParameteres java.lang.String --entityName ~.app.shared.location.Address --controllerClass ~.app.server.service.AddressService --controllerImplClass ~.app.server.service.AddressServiceImpl --repositoryClass ~.app.server.repository.AddressRepository --repositoryImplClass ~.app.server.repository.AddressRepositoryImpl --businessServiceClass ~.app.server.businessservice.AddressbzService --returnType java.util.List<com.app.shared.location.Address> --isFindByID true --isUserAccess false --isMultitenant false --refEntity com.app.shared.location.City
namedQuery insert --toClass ~.app.shared.location.Address --queryName Address.findById --queryValue "select e from Address e where e.systemInfo.activeStatus=1 and  e.addressId =:addressId"
methodoperation type namedQueryMethod --queryName Address.findById --qvalue "select e from Address e where e.systemInfo.activeStatus=1 and  e.addressId =:addressId" --qarameteres addressId --typeOfParameteres java.lang.String --entityName ~.app.shared.location.Address --controllerClass ~.app.server.service.AddressService --controllerImplClass ~.app.server.service.AddressServiceImpl --repositoryClass ~.app.server.repository.AddressRepository --repositoryImplClass ~.app.server.repository.AddressRepositoryImpl --businessServiceClass ~.app.server.businessservice.AddressbzService --returnType com.app.shared.location.Address --isFindByID true --isUserAccess false --isMultitenant false --refEntity com.app.shared.location.Address
buzzproperties codeStatus --PropertyFileName status --key Address --value 0
buzzorclass add --className AddressTestCase  --srcPath test
Class createAnnotation --toClass AddressTestCase --annotation org.junit.runner.RunWith --key value.org.junit.runner.RunWith --value org.springframework.test.context.junit4.SpringJUnit4ClassRunner --value_type javaClass
Class createAnnotation --toClass AddressTestCase --annotation org.springframework.test.context.web.WebAppConfiguration --key null.org.springframework.test.context.web.WebAppConfiguration --value null --value_type null
Class createAnnotation --toClass AddressTestCase --annotation org.springframework.test.context.ContextConfiguration --key classes.org.springframework.test.context.ContextConfiguration --value com.app.config.WebConfigExtended --value_type javaClass
Class createAnnotation --toClass AddressTestCase --annotation org.junit.FixMethodOrder --key value.org.junit.FixMethodOrder.org.junit.FixMethodOrder --value org.junit.runners.MethodSorters$NAME_ASCENDING#org.junit.FixMethodOrder --value_type javatype
ArrayAnnotation create --type AddressTestCase --key value --varaiable_name "" --value org.springframework.test.context.support.DependencyInjectionTestExecutionListener,org.springframework.test.context.support.DirtiesContextTestExecutionListener,org.springframework.test.context.transaction.TransactionalTestExecutionListener --valueType javatype,javatype,javatype --annotation org.springframework.test.context.TestExecutionListeners --addTo class
buzzorfield create --type AddressTestCase --field_name addressRepository --dataType com.app.server.repository.AddressRepository<com.app.shared.location.Address> --Modifier private --valueType 
fieldAnnotation create --type AddressTestCase --field_name addressRepository --valueType com.app.server.repository.AddressRepository --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type AddressTestCase --field_name runtimeLogInfoHelper --dataType com.athena.framework.server.helper.RuntimeLogInfoHelper --Modifier private --valueType 
fieldAnnotation create --type AddressTestCase --field_name runtimeLogInfoHelper --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type AddressTestCase --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --valueType 
fieldAnnotation create --type AddressTestCase --field_name entityValidator --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper<Object> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type AddressTestCase --field_name valueGenerator --dataType com.athena.framework.server.test.RandomValueGenerator --Modifier private --initializer "new com.athena.framework.server.test.RandomValueGenerator()"
buzzorfield create --type AddressTestCase --field_name map --dataType java.util.HashMap<String,Object> --Modifier private --initializer "new HashMap<String,Object>()" --isStatic true
buzzorfield create --type AddressTestCase --field_name methodCallStack --dataType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --Modifier private --valueType 
fieldAnnotation create --type AddressTestCase --field_name methodCallStack --valueType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type AddressTestCase --field_name session --dataType org.springframework.mock.web.MockHttpSession --Modifier protected --valueType javaType
buzzorfield create --type AddressTestCase --field_name request --dataType org.springframework.mock.web.MockHttpServletRequest --Modifier protected --valueType javaType
buzzorfield create --type AddressTestCase --field_name response --dataType org.springframework.mock.web.MockHttpServletResponse --Modifier protected --valueType javaType
buzzormethod add --toClass AddressTestCase --method_name startSession --modifier protected --return_type void --method_body "session = new MockHttpSession();"
buzzormethod add --toClass AddressTestCase --method_name endSession --modifier protected --return_type void --method_body "session.clearAttributes(); session.invalidate(); session = null;"
buzzormethod add --toClass AddressTestCase --method_name startRequest --modifier protected --return_type void --method_body "request = new MockHttpServletRequest(); request.setSession(session); org.springframework.web.context.request.RequestContextHolder.setRequestAttributes(new org.springframework.web.context.request.ServletRequestAttributes(request));"
buzzormethod add --toClass AddressTestCase --method_name endRequest --modifier protected --return_type void --method_body "((org.springframework.web.context.request.ServletRequestAttributes) org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()).requestCompleted(); org.springframework.web.context.request.RequestContextHolder.resetRequestAttributes(); request = null;"
buzzormethod add --toClass AddressTestCase --method_name before --modifier public --return_type void --method_body "startSession(); startRequest(); setBeans();" --annotation org.junit.Before --key "" --value ""
buzzormethod add --toClass AddressTestCase --method_name after --modifier public --return_type void --method_body "endSession(); endRequest();" --annotation org.junit.After --key "" --value ""
buzzormethod add --toClass AddressTestCase --method_name setBeans --modifier private --return_type void --method_body "runtimeLogInfoHelper.createRuntimeLogUserInfo(1, "AAAAA", request.getRemoteHost());   org.junit.Assert.assertNotNull(runtimeLogInfoHelper);methodCallStack.setRequestId(java.util.UUID.randomUUID().toString().toUpperCase()); "
 Import add --toClass AddressTestCase --importType com.app.shared.location.Address
 Import add --toClass AddressTestCase --importType com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface.RECORD_TYPE
buzzormethod add --toClass AddressTestCase --method_name test1Save --modifier public --return_type void --method_body " try { AddressType addresstype=new AddressType();addresstype.setAddressType("5KJI8aaw3RwWig7HPQFeFRw1ACO7ZLCjrqIkZB82r3fb8Zb03l"); addresstype.setAddressTypeDesc("AjImsYCqvCv7LkJIp8N8gE6nUOLwpVJt6jeLPbfkFmtGbS49Ti"); addresstype.setAddressTypeIcon("deLMiU9DzL38XNdIMp0OgoHKMqQajSg2qKdNS4XY4EaKEkx4lM"); AddressType AddressTypeTest =addresstypeRepository.save(addresstype);map.put("AddressTypePrimaryKey", addresstype._getPrimarykey());City city=new City();city.setCityCode(0); city.setCityCodeChar2("CVXmq9mWBeefqy6MDIBYUP2cjUd60fLq"); city.setCityDescription("RkGfVfj60reWANhS3ZfFVfVbsWsx2xYpAwdyVt80NGZcw1RQUY"); city.setCityFlag("8qIYRfJ79C0rLZhOaWZ1hkKaL3nxPL03ZP4ygt4wdwhDvrOW3y"); city.setCityLatitude(2); city.setCityLongitude(8); city.setCityName("CSBU1QcbOBUUwHNHdoUXWU1g8hehTOD4ZupVIScx4jSgfjuFMP"); Country country=new Country();country.setCapital("fYQAmjJxc8fND9SCBRjwW72SQo8eWq4u"); country.setCapitalLatitude(9); country.setCapitalLongitude(6); country.setCountryCode1("Wtz"); country.setCountryCode2("4ax"); country.setCountryFlag("HMH7lPq8mj6LFmlTmtw7EHTathvMBBllJQTtviJtB8zt5ZmIia"); country.setCountryName("cKnzyEyHYTAnyEZXrolKEfcvdDBAJZjGD3xSCGeisCYDeZfXDb"); country.setCurrencyCode("cba"); country.setCurrencyName("ndultLZMAbYkjVcdJjQ73fLblJz4JGLxAOF8XVqAIFaGmAgRkd"); country.setCurrencySymbol("WCeyvIkkjae3ZdhYUTpN3N4AXwmCfUgi"); country.setIsoNumeric(0); Country CountryTest =countryRepository.save(country);map.put("CountryPrimaryKey", country._getPrimarykey());State state=new State();state.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */state.setStateCapital("bAGqWtlv747uEUStrVOGu0xWk9zdK0egqL7xoQgDUQK6UyWkXT"); state.setStateCapitalLatitude(5); state.setStateCapitalLongitude(8); state.setStateCode(0); state.setStateCodeChar2("AXcU4ZgQ1o1BbtEGpKx2hnJCwfwVoGoN"); state.setStateCodeChar3("J3BpTKPevfQhruNHIzNjCfgl9RbRhFuG"); state.setStateDescription("1D6cRs3PO6biFhcfq44AbUAzSBKA8G8ERML8RtY868eiqTEr2k"); state.setStateFlag("pnhwO06tdo9lhsrM4JQtfXYSslVrNiMX1Qmmjc3Ig3RvLupbI1"); state.setStateName("ZP61rMObjloDiOkZLNsV7wJbRJBTVSHuK0pI5ESy0kfB4BCcXP"); State StateTest =stateRepository.save(state);map.put("StatePrimaryKey", state._getPrimarykey());city.setCityCode(0); city.setCityCodeChar2("JvwwzLYkWz7s9nlsMmdbBcw2XffRt3un"); city.setCityDescription("1XnZXXex32aHns09XbmCWulmibSHpnwz2SCForc48wzEfDzt78"); city.setCityFlag("7UKIgxUi4Ss4LTx5vR3C1coySJN3AYD1UibFMPUGRIgMYGCnSE"); city.setCityLatitude(2); city.setCityLongitude(1); city.setCityName("1KtHliDeFlJME8nqtGsmLMPxUNWO3gz1WJWZjESKnHnrJy7lC9"); city.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */city.setStateId((java.lang.String)StateTest._getPrimarykey()); /* ******Adding refrenced table data */City CityTest =cityRepository.save(city);map.put("CityPrimaryKey", city._getPrimarykey());Address address=new Address();address.setAddress1("1VWOLmngi6XuwUbBvLo7qTFrscOaZh9hxCtJXfOSfPBo9f5og9"); address.setAddress2("SWLGZQHdsmOynVgDdj5inUZvQ6BIRR2Q0sW2gCvMg07DyqKAn7"); address.setAddress3("VdzMt5wFGCjyKpXelkhbbqStc0ZWEfOuf6oY4BskXgSgLUXWyh"); address.setAddressLabel("v1fNxp3GATU"); address.setAddressTypeId((java.lang.String)AddressTypeTest._getPrimarykey()); /* ******Adding refrenced table data */address.setCityId((java.lang.String)CityTest._getPrimarykey()); /* ******Adding refrenced table data */address.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */address.setLatitude("JQ3nxwcFQx5w5mGQnfVX6CzilNS63nNbq7nsyH57RxGjoPmSZx"); address.setLongitude("H9Ko5f1PPDxiMV6sHP6ESEet3jlnlnQxQKy6LLVMj4Ry2zqIlj"); address.setStateId((java.lang.String)StateTest._getPrimarykey()); address.setZipcode("UYCnk4"); address.setEntityAudit(1, "xyz", RECORD_TYPE.ADD);address.setEntityValidator(entityValidator);address.isValid();addressRepository.save(address); map.put("AddressPrimaryKey", address._getPrimarykey());} catch (com.athena.framework.server.exception.biz.SpartanConstraintViolationException e) {org.junit.Assert.fail(e.getMessage()); }  catch (java.lang.Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
 Import add --toClass AddressTestCase --importType com.app.shared.location.AddressType
buzzorfield create --type AddressTestCase --field_name addresstypeRepository --dataType com.app.server.repository.AddressTypeRepository<com.app.shared.location.AddressType> --Modifier private --valueType 
fieldAnnotation create --type AddressTestCase --field_name addresstypeRepository --valueType com.app.server.repository.AddressTypeRepository<com.app.shared.location.AddressType> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass AddressTestCase --importType com.app.shared.location.City
buzzorfield create --type AddressTestCase --field_name cityRepository --dataType com.app.server.repository.CityRepository<com.app.shared.location.City> --Modifier private --valueType 
fieldAnnotation create --type AddressTestCase --field_name cityRepository --valueType com.app.server.repository.CityRepository<com.app.shared.location.City> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass AddressTestCase --importType com.app.shared.location.Country
buzzorfield create --type AddressTestCase --field_name countryRepository --dataType com.app.server.repository.CountryRepository<com.app.shared.location.Country> --Modifier private --valueType 
fieldAnnotation create --type AddressTestCase --field_name countryRepository --valueType com.app.server.repository.CountryRepository<com.app.shared.location.Country> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass AddressTestCase --importType com.app.shared.location.State
buzzorfield create --type AddressTestCase --field_name stateRepository --dataType com.app.server.repository.StateRepository<com.app.shared.location.State> --Modifier private --valueType 
fieldAnnotation create --type AddressTestCase --field_name stateRepository --valueType com.app.server.repository.StateRepository<com.app.shared.location.State> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass AddressTestCase --importType com.app.shared.location.Country
 Import add --toClass AddressTestCase --importType com.app.shared.location.Country
 Import add --toClass AddressTestCase --importType com.app.shared.location.State
buzzormethod add --toClass AddressTestCase --method_name test2Update --modifier public --return_type void --method_body " try { org.junit.Assert.assertNotNull(map.get("AddressPrimaryKey"));Address address=addressRepository.findById((java.lang.String)map.get("AddressPrimaryKey"));address.setAddress1("MbeDEbVSpzrDQqJ6gYRzA3PUb3WPwCq343XK0ZGhfblzdcdCQW");address.setAddress2("lKRX0LblW0RkgZmDfKrxvj2WWDi6vop3k34X3PpTzfeJz1EQMy");address.setAddress3("GVZxfe1hGhnbr7yNqKCni1t24l4s9RYoQbwOAoSrSO3Pv1KY55");address.setAddressLabel("on0qW1ZI0Nu");address.setLatitude("wXAiZmf9QH1jzrPBUw940xHtLHnK7XipDGLhxDH2ZXJOsf3P3c");address.setLongitude("ZGbVsms0X8ZbWiZqnNeSfX1o9T24i7JuQEyCGVRFt6R55becBz");address.setVersionId(1);address.setZipcode("laivwe");address.setEntityAudit(1, "xyz", RECORD_TYPE.UPDATE);addressRepository.update(address);} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch (java.lang.Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass AddressTestCase --method_name test3FindById --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("AddressPrimaryKey"));addressRepository.findById((java.lang.String)map.get("AddressPrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass AddressTestCase --method_name test3findByaddressTypeId --modifier public --return_type void --method_body " try {java.util.List<Address> listofaddressTypeId=addressRepository.findByAddressTypeId((java.lang.String)map.get("AddressTypePrimaryKey"));if(listofaddressTypeId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass AddressTestCase --method_name test3findBycityId --modifier public --return_type void --method_body " try {java.util.List<Address> listofcityId=addressRepository.findByCityId((java.lang.String)map.get("CityPrimaryKey"));if(listofcityId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass AddressTestCase --method_name test3findBycountryId --modifier public --return_type void --method_body " try {java.util.List<Address> listofcountryId=addressRepository.findByCountryId((java.lang.String)map.get("CountryPrimaryKey"));if(listofcountryId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass AddressTestCase --method_name test3findBystateId --modifier public --return_type void --method_body " try {java.util.List<Address> listofstateId=addressRepository.findByStateId((java.lang.String)map.get("StatePrimaryKey"));if(listofstateId.size()==0){org.junit.Assert.fail("Query did not return any records.");  }} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass AddressTestCase --method_name test4Delete --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("AddressPrimaryKey"));addressRepository.delete((java.lang.String)map.get("AddressPrimaryKey"));/* Deleting refrenced data */cityRepository.delete((java.lang.String)map.get("CityPrimaryKey"));/* Deleting refrenced data */stateRepository.delete((java.lang.String)map.get("StatePrimaryKey"));/* Deleting refrenced data */countryRepository.delete((java.lang.String)map.get("CountryPrimaryKey"));/* Deleting refrenced data */addresstypeRepository.delete((java.lang.String)map.get("AddressTypePrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzorclass add --className TestnnnnTestCase  --srcPath test
Class createAnnotation --toClass TestnnnnTestCase --annotation org.junit.runner.RunWith --key value.org.junit.runner.RunWith --value org.springframework.test.context.junit4.SpringJUnit4ClassRunner --value_type javaClass
Class createAnnotation --toClass TestnnnnTestCase --annotation org.springframework.test.context.web.WebAppConfiguration --key null.org.springframework.test.context.web.WebAppConfiguration --value null --value_type null
Class createAnnotation --toClass TestnnnnTestCase --annotation org.springframework.test.context.ContextConfiguration --key classes.org.springframework.test.context.ContextConfiguration --value com.app.config.WebConfigExtended --value_type javaClass
Class createAnnotation --toClass TestnnnnTestCase --annotation org.junit.FixMethodOrder --key value.org.junit.FixMethodOrder.org.junit.FixMethodOrder --value org.junit.runners.MethodSorters$NAME_ASCENDING#org.junit.FixMethodOrder --value_type javatype
ArrayAnnotation create --type TestnnnnTestCase --key value --varaiable_name "" --value org.springframework.test.context.support.DependencyInjectionTestExecutionListener,org.springframework.test.context.support.DirtiesContextTestExecutionListener,org.springframework.test.context.transaction.TransactionalTestExecutionListener --valueType javatype,javatype,javatype --annotation org.springframework.test.context.TestExecutionListeners --addTo class
buzzorfield create --type TestnnnnTestCase --field_name testnnnnRepository --dataType com.app.server.repository.TestnnnnRepository<com.app.shared.defaultdomain.Testnnnn> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name testnnnnRepository --valueType com.app.server.repository.TestnnnnRepository --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestnnnnTestCase --field_name runtimeLogInfoHelper --dataType com.athena.framework.server.helper.RuntimeLogInfoHelper --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name runtimeLogInfoHelper --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestnnnnTestCase --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name entityValidator --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper<Object> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestnnnnTestCase --field_name valueGenerator --dataType com.athena.framework.server.test.RandomValueGenerator --Modifier private --initializer "new com.athena.framework.server.test.RandomValueGenerator()"
buzzorfield create --type TestnnnnTestCase --field_name map --dataType java.util.HashMap<String,Object> --Modifier private --initializer "new HashMap<String,Object>()" --isStatic true
buzzorfield create --type TestnnnnTestCase --field_name methodCallStack --dataType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name methodCallStack --valueType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestnnnnTestCase --field_name session --dataType org.springframework.mock.web.MockHttpSession --Modifier protected --valueType javaType
buzzorfield create --type TestnnnnTestCase --field_name request --dataType org.springframework.mock.web.MockHttpServletRequest --Modifier protected --valueType javaType
buzzorfield create --type TestnnnnTestCase --field_name response --dataType org.springframework.mock.web.MockHttpServletResponse --Modifier protected --valueType javaType
buzzormethod add --toClass TestnnnnTestCase --method_name startSession --modifier protected --return_type void --method_body "session = new MockHttpSession();"
buzzormethod add --toClass TestnnnnTestCase --method_name endSession --modifier protected --return_type void --method_body "session.clearAttributes(); session.invalidate(); session = null;"
buzzormethod add --toClass TestnnnnTestCase --method_name startRequest --modifier protected --return_type void --method_body "request = new MockHttpServletRequest(); request.setSession(session); org.springframework.web.context.request.RequestContextHolder.setRequestAttributes(new org.springframework.web.context.request.ServletRequestAttributes(request));"
buzzormethod add --toClass TestnnnnTestCase --method_name endRequest --modifier protected --return_type void --method_body "((org.springframework.web.context.request.ServletRequestAttributes) org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()).requestCompleted(); org.springframework.web.context.request.RequestContextHolder.resetRequestAttributes(); request = null;"
buzzormethod add --toClass TestnnnnTestCase --method_name before --modifier public --return_type void --method_body "startSession(); startRequest(); setBeans();" --annotation org.junit.Before --key "" --value ""
buzzormethod add --toClass TestnnnnTestCase --method_name after --modifier public --return_type void --method_body "endSession(); endRequest();" --annotation org.junit.After --key "" --value ""
buzzormethod add --toClass TestnnnnTestCase --method_name setBeans --modifier private --return_type void --method_body "runtimeLogInfoHelper.createRuntimeLogUserInfo(1, "AAAAA", request.getRemoteHost());   org.junit.Assert.assertNotNull(runtimeLogInfoHelper);methodCallStack.setRequestId(java.util.UUID.randomUUID().toString().toUpperCase()); "
 Import add --toClass TestnnnnTestCase --importType com.app.shared.defaultdomain.Testnnnn
 Import add --toClass TestnnnnTestCase --importType com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface.RECORD_TYPE
buzzormethod add --toClass TestnnnnTestCase --method_name test1Save --modifier public --return_type void --method_body " try { Address address=new Address();address.setAddress1("RfzI3Fjyt7Npp37OlRSggUYYVCikqEnUHv8nzm4vXn2vYkGIYn"); address.setAddress2("MtgCu2Hp3GgeJAPkMGPQBw41mzMzMqXhmpabR0ff8BOV8sHpbA"); address.setAddress3("YnjjoeM7cFgJuS2aGP3fh9ryNxghbKkB9pKJpJG692VRw9Z5ng"); address.setAddressLabel("yKB9CPhRwbq"); AddressType addresstype=new AddressType();addresstype.setAddressType("o8Gz13vshzvsaUf43pwCGOAKwEu4vqgpHd0t34BhH2gFVzial9"); addresstype.setAddressTypeDesc("StCDpBsohUwPkGe3ltG5xFYABdcDSzGklf3unzrqlPKZ7H5lbT"); addresstype.setAddressTypeIcon("iIbOCPdiCeLyRTgI5MvYhzJLGZlfBgzSnsnHSU5cVLTpdNySq0"); AddressType AddressTypeTest =addresstypeRepository.save(addresstype);map.put("AddressTypePrimaryKey", addresstype._getPrimarykey());City city=new City();city.setCityCode(1); city.setCityCodeChar2("oX7TCAGLsEfYRVCMBp4AsgHbWsFos9BJ"); city.setCityDescription("q6KBM9yPuVuYwq2gOCNh9Me1CA5PGMnQSjUI82R4bRYN9e30Ul"); city.setCityFlag("gw3rtvlVlRvjuBVy7YkHc4H7BZpOn0CwRp30ttJqH7hTZk5zYE"); city.setCityLatitude(10); city.setCityLongitude(11); city.setCityName("3YXD6W04n86uuL6JQsJbDlM1j72QE1s6xnsqcUWRWSX5Y6ijNZ"); Country country=new Country();country.setCapital("LSfwLH2e60Ag4XCBlBHKhcgmVUPmUzgK"); country.setCapitalLatitude(5); country.setCapitalLongitude(0); country.setCountryCode1("X0y"); country.setCountryCode2("3Sa"); country.setCountryFlag("oGjBCBbHhKpP1HXzHJsyAPfiUpk8vJWIjxx2JdhAbJJANkEYsm"); country.setCountryName("BHR3KkgE1WKlwES4XY7fT1Or6tNhxCb4ATJVEMO7oerdrNOWMS"); country.setCurrencyCode("VVV"); country.setCurrencyName("DyjlFiI2z3LrxQcG2NNwuX71KXSZeb5rjICyTKENmTF7T2HPP2"); country.setCurrencySymbol("MoYgo0ekyaoALR2vWmdO1cgngwom6yGd"); country.setIsoNumeric(6); Country CountryTest =countryRepository.save(country);map.put("CountryPrimaryKey", country._getPrimarykey());State state=new State();state.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */state.setStateCapital("2jWDUENsX177uvc4PxKgHPmZj94zNpQcoepvDtuZu5aI6gMxiK"); state.setStateCapitalLatitude(7); state.setStateCapitalLongitude(7); state.setStateCode(0); state.setStateCodeChar2("IMWiN3lutJqkCmPmZ6ERuZDNqPxVmM3r"); state.setStateCodeChar3("1tR5HZhU8ifB6OFeemD0MrlpWGsUsQqh"); state.setStateDescription("pbWsNhZzmVFZZqxBbfmSzCH7oA7CCsnQcHvdSYC6tyCVgjY8Ig"); state.setStateFlag("kFgqRMzg5WDQAx9OzGdSB40IIPuOXb6yzx5A2tzMIcmSnW8U2N"); state.setStateName("FEuYjRQeCBhjYb9kTeTpgw8NM5wQXvKapn6mRhYmY82YKpcPnD"); State StateTest =stateRepository.save(state);map.put("StatePrimaryKey", state._getPrimarykey());city.setCityCode(1); city.setCityCodeChar2("OAnaLSNiZzd0Nd3rBPPUKyXQxUzPsoLw"); city.setCityDescription("hCoWDBI3lNHrOQhG7EddwXUOITT1ktRDNvuBzqLi0hMrIiRCnw"); city.setCityFlag("7aUMgd3PRILkUsJmiSL0VeHnihTKCd1FDolZlta1b3rhI3ip2b"); city.setCityLatitude(3); city.setCityLongitude(9); city.setCityName("fYdja3vy0i17MZwMwoccb27pJbyWr8nj32O5JeesD3F9YlJMb7"); city.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */city.setStateId((java.lang.String)StateTest._getPrimarykey()); /* ******Adding refrenced table data */City CityTest =cityRepository.save(city);map.put("CityPrimaryKey", city._getPrimarykey());address.setAddress1("m1KDkDZ7nSzLnNLq98bU3NsDQgd1162qMvUPBkExCY8lbYuat5"); address.setAddress2("skIPP37vX6BHxi3oiLsFkmpiYxOvUXdxhsiWbOIe5tZFSkk0bI"); address.setAddress3("Qdh4FI0iSqn3CGJr660U9AM9PyrNfFVsoXwa1xIPeK3v9o26FR"); address.setAddressLabel("KQNP7djRGVl"); address.setAddressTypeId((java.lang.String)AddressTypeTest._getPrimarykey()); /* ******Adding refrenced table data */address.setCityId((java.lang.String)CityTest._getPrimarykey()); /* ******Adding refrenced table data */address.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */address.setLatitude("uUhYXDySnAC52m41ASSlllLG4PI1VEl6SPYP9E3Gct3vkNeN34"); address.setLongitude("75BX2EKsT54aJZSUJUXuyXBI7aIqvSFwVmEQOibSvXrLwQakwV"); address.setStateId((java.lang.String)StateTest._getPrimarykey()); address.setZipcode("1vV34F"); Testnnnn testnnnn=new Testnnnn();testnnnn.setAddress(addressRepository.save(address));map.put("AddressPrimaryKey", address._getPrimarykey());testnnnn.setSfsf("HelloWorld"); testnnnn.setEntityAudit(1, "xyz", RECORD_TYPE.ADD);testnnnn.setEntityValidator(entityValidator);testnnnn.isValid();testnnnnRepository.save(testnnnn); map.put("TestnnnnPrimaryKey", testnnnn._getPrimarykey());} catch (com.athena.framework.server.exception.biz.SpartanConstraintViolationException e) {org.junit.Assert.fail(e.getMessage()); }  catch (java.lang.Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.Address
buzzorfield create --type TestnnnnTestCase --field_name addressRepository --dataType com.app.server.repository.AddressRepository<com.app.shared.location.Address> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name addressRepository --valueType com.app.server.repository.AddressRepository<com.app.shared.location.Address> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.AddressType
buzzorfield create --type TestnnnnTestCase --field_name addresstypeRepository --dataType com.app.server.repository.AddressTypeRepository<com.app.shared.location.AddressType> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name addresstypeRepository --valueType com.app.server.repository.AddressTypeRepository<com.app.shared.location.AddressType> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.City
buzzorfield create --type TestnnnnTestCase --field_name cityRepository --dataType com.app.server.repository.CityRepository<com.app.shared.location.City> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name cityRepository --valueType com.app.server.repository.CityRepository<com.app.shared.location.City> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.Country
buzzorfield create --type TestnnnnTestCase --field_name countryRepository --dataType com.app.server.repository.CountryRepository<com.app.shared.location.Country> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name countryRepository --valueType com.app.server.repository.CountryRepository<com.app.shared.location.Country> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.State
buzzorfield create --type TestnnnnTestCase --field_name stateRepository --dataType com.app.server.repository.StateRepository<com.app.shared.location.State> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name stateRepository --valueType com.app.server.repository.StateRepository<com.app.shared.location.State> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.Country
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.Country
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.State
buzzormethod add --toClass TestnnnnTestCase --method_name test2Update --modifier public --return_type void --method_body " try { org.junit.Assert.assertNotNull(map.get("TestnnnnPrimaryKey"));Testnnnn testnnnn=testnnnnRepository.findById((java.lang.String)map.get("TestnnnnPrimaryKey"));testnnnn.setSfsf("HelloWorld");testnnnn.setVersionId(1);testnnnn.setEntityAudit(1, "xyz", RECORD_TYPE.UPDATE);testnnnnRepository.update(testnnnn);} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch (java.lang.Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass TestnnnnTestCase --method_name test3FindById --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("TestnnnnPrimaryKey"));testnnnnRepository.findById((java.lang.String)map.get("TestnnnnPrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass TestnnnnTestCase --method_name test4Delete --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("TestnnnnPrimaryKey"));testnnnnRepository.delete((java.lang.String)map.get("TestnnnnPrimaryKey"));/* Deleting refrenced data */addressRepository.delete((java.lang.String)map.get("AddressPrimaryKey"));/* Deleting refrenced data */cityRepository.delete((java.lang.String)map.get("CityPrimaryKey"));/* Deleting refrenced data */stateRepository.delete((java.lang.String)map.get("StatePrimaryKey"));/* Deleting refrenced data */countryRepository.delete((java.lang.String)map.get("CountryPrimaryKey"));/* Deleting refrenced data */addresstypeRepository.delete((java.lang.String)map.get("AddressTypePrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzorclass add --className TestOOOTestCase  --srcPath test
Class createAnnotation --toClass TestOOOTestCase --annotation org.junit.runner.RunWith --key value.org.junit.runner.RunWith --value org.springframework.test.context.junit4.SpringJUnit4ClassRunner --value_type javaClass
Class createAnnotation --toClass TestOOOTestCase --annotation org.springframework.test.context.web.WebAppConfiguration --key null.org.springframework.test.context.web.WebAppConfiguration --value null --value_type null
Class createAnnotation --toClass TestOOOTestCase --annotation org.springframework.test.context.ContextConfiguration --key classes.org.springframework.test.context.ContextConfiguration --value com.app.config.WebConfigExtended --value_type javaClass
Class createAnnotation --toClass TestOOOTestCase --annotation org.junit.FixMethodOrder --key value.org.junit.FixMethodOrder.org.junit.FixMethodOrder --value org.junit.runners.MethodSorters$NAME_ASCENDING#org.junit.FixMethodOrder --value_type javatype
ArrayAnnotation create --type TestOOOTestCase --key value --varaiable_name "" --value org.springframework.test.context.support.DependencyInjectionTestExecutionListener,org.springframework.test.context.support.DirtiesContextTestExecutionListener,org.springframework.test.context.transaction.TransactionalTestExecutionListener --valueType javatype,javatype,javatype --annotation org.springframework.test.context.TestExecutionListeners --addTo class
buzzorfield create --type TestOOOTestCase --field_name testoooRepository --dataType com.app.server.repository.TestOOORepository<com.app.shared.defaultdomain.TestOOO> --Modifier private --valueType 
fieldAnnotation create --type TestOOOTestCase --field_name testoooRepository --valueType com.app.server.repository.TestOOORepository --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestOOOTestCase --field_name runtimeLogInfoHelper --dataType com.athena.framework.server.helper.RuntimeLogInfoHelper --Modifier private --valueType 
fieldAnnotation create --type TestOOOTestCase --field_name runtimeLogInfoHelper --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestOOOTestCase --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --valueType 
fieldAnnotation create --type TestOOOTestCase --field_name entityValidator --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper<Object> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestOOOTestCase --field_name valueGenerator --dataType com.athena.framework.server.test.RandomValueGenerator --Modifier private --initializer "new com.athena.framework.server.test.RandomValueGenerator()"
buzzorfield create --type TestOOOTestCase --field_name map --dataType java.util.HashMap<String,Object> --Modifier private --initializer "new HashMap<String,Object>()" --isStatic true
buzzorfield create --type TestOOOTestCase --field_name methodCallStack --dataType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --Modifier private --valueType 
fieldAnnotation create --type TestOOOTestCase --field_name methodCallStack --valueType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestOOOTestCase --field_name session --dataType org.springframework.mock.web.MockHttpSession --Modifier protected --valueType javaType
buzzorfield create --type TestOOOTestCase --field_name request --dataType org.springframework.mock.web.MockHttpServletRequest --Modifier protected --valueType javaType
buzzorfield create --type TestOOOTestCase --field_name response --dataType org.springframework.mock.web.MockHttpServletResponse --Modifier protected --valueType javaType
buzzormethod add --toClass TestOOOTestCase --method_name startSession --modifier protected --return_type void --method_body "session = new MockHttpSession();"
buzzormethod add --toClass TestOOOTestCase --method_name endSession --modifier protected --return_type void --method_body "session.clearAttributes(); session.invalidate(); session = null;"
buzzormethod add --toClass TestOOOTestCase --method_name startRequest --modifier protected --return_type void --method_body "request = new MockHttpServletRequest(); request.setSession(session); org.springframework.web.context.request.RequestContextHolder.setRequestAttributes(new org.springframework.web.context.request.ServletRequestAttributes(request));"
buzzormethod add --toClass TestOOOTestCase --method_name endRequest --modifier protected --return_type void --method_body "((org.springframework.web.context.request.ServletRequestAttributes) org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()).requestCompleted(); org.springframework.web.context.request.RequestContextHolder.resetRequestAttributes(); request = null;"
buzzormethod add --toClass TestOOOTestCase --method_name before --modifier public --return_type void --method_body "startSession(); startRequest(); setBeans();" --annotation org.junit.Before --key "" --value ""
buzzormethod add --toClass TestOOOTestCase --method_name after --modifier public --return_type void --method_body "endSession(); endRequest();" --annotation org.junit.After --key "" --value ""
buzzormethod add --toClass TestOOOTestCase --method_name setBeans --modifier private --return_type void --method_body "runtimeLogInfoHelper.createRuntimeLogUserInfo(1, "AAAAA", request.getRemoteHost());   org.junit.Assert.assertNotNull(runtimeLogInfoHelper);methodCallStack.setRequestId(java.util.UUID.randomUUID().toString().toUpperCase()); "
 Import add --toClass TestOOOTestCase --importType com.app.shared.defaultdomain.TestOOO
 Import add --toClass TestOOOTestCase --importType com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface.RECORD_TYPE
buzzormethod add --toClass TestOOOTestCase --method_name test1Save --modifier public --return_type void --method_body " try { Address address=new Address();address.setAddress1("4q7ehWsf6DNvWN2DAGT2eolxn8KT3PNI8Tdtft2OimYeDzqmqb"); address.setAddress2("yViuS22Uo4X4CO78iUB8YEmDv0peFFzQwuhKaQ1e3cK6PBblkQ"); address.setAddress3("SScewSMav0iXNREhg3NwdmGlhbRV0qmDBdsFU2B2JFllSJA8n1"); address.setAddressLabel("OzowPpQJ0jz"); AddressType addresstype=new AddressType();addresstype.setAddressType("vAfDc4liNurNVwXbM6JmiCDCkDlmE1EpHM4PzFIBAFSJbq62DT"); addresstype.setAddressTypeDesc("02s7PP6UZCjoSfxAanmwecM197pWXTfgKobWRBq7ezVYjL9M3t"); addresstype.setAddressTypeIcon("S8LgpHUR7OoO8CMuQFUCNobXoAykijWxQwocMPMxz9wnap2ZqU"); AddressType AddressTypeTest =addresstypeRepository.save(addresstype);map.put("AddressTypePrimaryKey", addresstype._getPrimarykey());City city=new City();city.setCityCode(3); city.setCityCodeChar2("0Q34ZFSYlb8LaZyplcL0o8nNnivI8owM"); city.setCityDescription("pZUUN9OCHYQr55Axk2wXxd5JMVzYChm1b1PkXyi5fta1QF3fxS"); city.setCityFlag("gE4MtfFbRPvofjohSq4DStBFcrxQ5vDxV9PorweyuQArZR9Qdo"); city.setCityLatitude(10); city.setCityLongitude(7); city.setCityName("F2gunGbJ5zqmOOfCZGpdaEIMvMHsgFWYkmXJQnPMmQU7h9ndN4"); Country country=new Country();country.setCapital("VvPbQmGCFHUzNijNWLfSmYicUccfMExP"); country.setCapitalLatitude(11); country.setCapitalLongitude(11); country.setCountryCode1("qoM"); country.setCountryCode2("VSf"); country.setCountryFlag("JU63wMNUfQWf3vydruJUUuQUK5WYeyiGMHtxlgDwPyGcoeeBVi"); country.setCountryName("OQTH6f3jQBdBKRLVXeeeZAWgXo7CY2ee7IS1CQS4espX9KJ4Fx"); country.setCurrencyCode("z47"); country.setCurrencyName("eP6PC4FOcTprdwpD2zWw0SZ1IAlUKnjIH13RPdWuQo52UlUrlN"); country.setCurrencySymbol("awF7nyh8uJqFvCJAzo17jm5Y8pJghULW"); country.setIsoNumeric(9); Country CountryTest =countryRepository.save(country);map.put("CountryPrimaryKey", country._getPrimarykey());State state=new State();state.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */state.setStateCapital("JSdtbtdmQbgKk3Ymr3L9qs5LmygEjoDcfdRaaVcQpZ643tZN1Z"); state.setStateCapitalLatitude(1); state.setStateCapitalLongitude(7); state.setStateCode(2); state.setStateCodeChar2("n5i6Snl1MHzRll5z8zFGQ4TpAp0e9YXX"); state.setStateCodeChar3("6eBbplZhoIX1xwuVukVnbBxGj6Xlapd0"); state.setStateDescription("pT9bWjMsq0itUGgOXqgWDHR1AZDoIKby8fDYI1INZhKN7on7w4"); state.setStateFlag("5HQ0OaXk7tI0juZ8i0dZBgi6MtSmr6Qr0aAlIuEF7yGdVB51ib"); state.setStateName("zckF7ysF13CWL4aiZWJOKRx1yBF05HfCb8vtc2d5h0FnGNrRdv"); State StateTest =stateRepository.save(state);map.put("StatePrimaryKey", state._getPrimarykey());city.setCityCode(1); city.setCityCodeChar2("hhh69JexmV3zOW8IQg2KmePNFDjcZF87"); city.setCityDescription("2R1m9fT1GBeXrGgMGGvviixqDWAw9zv1CGegys1PNxnPfnPEpP"); city.setCityFlag("1BQSqr8XEKkhqcjpEozqtTPEsdjmOp6iW5IVzUkV0o0iETGFDy"); city.setCityLatitude(2); city.setCityLongitude(7); city.setCityName("H9pz6FdkRzSnuHEZqdTUvZKMh1IFQjL6p7dhqn39a3IHNnctR9"); city.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */city.setStateId((java.lang.String)StateTest._getPrimarykey()); /* ******Adding refrenced table data */City CityTest =cityRepository.save(city);map.put("CityPrimaryKey", city._getPrimarykey());address.setAddress1("cK9dFVBWghnXvhyPJkrhXSyqeS4qCA92Eca7Psl0m7HDa7x0f3"); address.setAddress2("kK6F2jBrAs2Q4jKvUoooWIoocigNID7jBs8QCVcFHrOZ8l2bPE"); address.setAddress3("ErjisdGNZZRfooMtCzjhhSNCd7PPLLDwesMR131JE1NMuJxcyN"); address.setAddressLabel("zVw6xfjTMhf"); address.setAddressTypeId((java.lang.String)AddressTypeTest._getPrimarykey()); /* ******Adding refrenced table data */address.setCityId((java.lang.String)CityTest._getPrimarykey()); /* ******Adding refrenced table data */address.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */address.setLatitude("bJQNE9VGxzxgKZ4rtkCh6MUt5HEOoZht9qjuYK8h5fGHlYoYEx"); address.setLongitude("EHY0dkyclSa6te9YDQzOVD9MehwnpPZaOgGjDAdN2ASMbeGake"); address.setStateId((java.lang.String)StateTest._getPrimarykey()); address.setZipcode("qLiR0w"); TestOOO testooo=new TestOOO();testooo.setAddress(addressRepository.save(address));map.put("AddressPrimaryKey", address._getPrimarykey());testooo.setDsds("Q7QuigQuV1Vrr81AhlRYwVJAHx7Duns7fjj6z2uWkNOIsgUzso"); testooo.setEntityAudit(1, "xyz", RECORD_TYPE.ADD);testooo.setEntityValidator(entityValidator);testooo.isValid();testoooRepository.save(testooo); map.put("TestOOOPrimaryKey", testooo._getPrimarykey());} catch (com.athena.framework.server.exception.biz.SpartanConstraintViolationException e) {org.junit.Assert.fail(e.getMessage()); }  catch (java.lang.Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
 Import add --toClass TestOOOTestCase --importType com.app.shared.location.Address
buzzorfield create --type TestOOOTestCase --field_name addressRepository --dataType com.app.server.repository.AddressRepository<com.app.shared.location.Address> --Modifier private --valueType 
fieldAnnotation create --type TestOOOTestCase --field_name addressRepository --valueType com.app.server.repository.AddressRepository<com.app.shared.location.Address> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestOOOTestCase --importType com.app.shared.location.AddressType
buzzorfield create --type TestOOOTestCase --field_name addresstypeRepository --dataType com.app.server.repository.AddressTypeRepository<com.app.shared.location.AddressType> --Modifier private --valueType 
fieldAnnotation create --type TestOOOTestCase --field_name addresstypeRepository --valueType com.app.server.repository.AddressTypeRepository<com.app.shared.location.AddressType> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestOOOTestCase --importType com.app.shared.location.City
buzzorfield create --type TestOOOTestCase --field_name cityRepository --dataType com.app.server.repository.CityRepository<com.app.shared.location.City> --Modifier private --valueType 
fieldAnnotation create --type TestOOOTestCase --field_name cityRepository --valueType com.app.server.repository.CityRepository<com.app.shared.location.City> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestOOOTestCase --importType com.app.shared.location.Country
buzzorfield create --type TestOOOTestCase --field_name countryRepository --dataType com.app.server.repository.CountryRepository<com.app.shared.location.Country> --Modifier private --valueType 
fieldAnnotation create --type TestOOOTestCase --field_name countryRepository --valueType com.app.server.repository.CountryRepository<com.app.shared.location.Country> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestOOOTestCase --importType com.app.shared.location.State
buzzorfield create --type TestOOOTestCase --field_name stateRepository --dataType com.app.server.repository.StateRepository<com.app.shared.location.State> --Modifier private --valueType 
fieldAnnotation create --type TestOOOTestCase --field_name stateRepository --valueType com.app.server.repository.StateRepository<com.app.shared.location.State> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestOOOTestCase --importType com.app.shared.location.Country
 Import add --toClass TestOOOTestCase --importType com.app.shared.location.Country
 Import add --toClass TestOOOTestCase --importType com.app.shared.location.State
buzzormethod add --toClass TestOOOTestCase --method_name test2Update --modifier public --return_type void --method_body " try { org.junit.Assert.assertNotNull(map.get("TestOOOPrimaryKey"));TestOOO testooo=testoooRepository.findById((java.lang.String)map.get("TestOOOPrimaryKey"));testooo.setDsds("IS9zgz5tr2Li8cHZMLMNAeNTwXtSXRf9AIusEoq70LCxynAizz");testooo.setVersionId(1);testooo.setEntityAudit(1, "xyz", RECORD_TYPE.UPDATE);testoooRepository.update(testooo);} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch (java.lang.Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass TestOOOTestCase --method_name test3FindById --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("TestOOOPrimaryKey"));testoooRepository.findById((java.lang.String)map.get("TestOOOPrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass TestOOOTestCase --method_name test4Delete --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("TestOOOPrimaryKey"));testoooRepository.delete((java.lang.String)map.get("TestOOOPrimaryKey"));/* Deleting refrenced data */addressRepository.delete((java.lang.String)map.get("AddressPrimaryKey"));/* Deleting refrenced data */cityRepository.delete((java.lang.String)map.get("CityPrimaryKey"));/* Deleting refrenced data */stateRepository.delete((java.lang.String)map.get("StatePrimaryKey"));/* Deleting refrenced data */countryRepository.delete((java.lang.String)map.get("CountryPrimaryKey"));/* Deleting refrenced data */addresstypeRepository.delete((java.lang.String)map.get("AddressTypePrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzproperties codeStatus --PropertyFileName status --key Testnnnn --value 1
buzzorclass add --className ~.app.shared.defaultdomain.Testnnnn --implements java.io.Serializable,com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface --implementsGenericType java.util.Comparator#com.app.shared.defaultdomain.Testnnnn --annotation javax.persistence.Table,javax.persistence.Entity,org.eclipse.persistence.annotations.Cache,com.athena.annotation.SourceCodeAuthorClass --key type.org.eclipse.persistence.annotations.Cache,size.org.eclipse.persistence.annotations.Cache,expiry.org.eclipse.persistence.annotations.Cache,alwaysRefresh.org.eclipse.persistence.annotations.Cache,disableHits.org.eclipse.persistence.annotations.Cache,name.javax.persistence.Table,createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value org.eclipse.persistence.annotations.CacheType$CACHE#org.eclipse.persistence.annotations.CacheType,64000.org.eclipse.persistence.annotations.Cache,0.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,FALSE.org.eclipse.persistence.annotations.Cache,ast_Testnnnn_T.javax.persistence.Table,nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass,.com.athena.annotation.SourceCodeAuthorClass,1.com.athena.annotation.SourceCodeAuthorClass,Testnnnn.com.athena.annotation.SourceCodeAuthorClass,com.athena.annotation.Complexity$LOW#com.athena.annotation.Complexity --value_type javaType,Integer,Integer,Boolean,Boolean,String,String,String,String,String,javaType
Persistent add entity --entityName com.app.shared.defaultdomain.Testnnnn
buzzorfield create --type ~.app.shared.defaultdomain.Testnnnn --field_name sfsf --dataType java.lang.String --Modifier private --valueType String,String --annotation javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value sfsf.javax.persistence.Column,sfsf.com.fasterxml.jackson.annotation.JsonProperty
fieldAnnotation create --type ~.app.shared.defaultdomain.Testnnnn --field_name sfsf --valueType string --annotation javax.validation.constraints.NotNull --key value --value 1
fieldAnnotation create --type ~.app.shared.defaultdomain.Testnnnn --field_name sfsf --annotation javax.validation.constraints.Pattern --key regexp.javax.validation.constraints.Pattern --valueType string --value "^[a-zA-Z]+$"
fieldAnnotation create --type ~.app.shared.defaultdomain.Testnnnn --field_name sfsf --valueType integer,integer --annotation javax.validation.constraints.Size --key min.javax.validation.constraints.Size,max.javax.validation.constraints.Size --value 0#cfg#256
buzzorfield create --type ~.app.shared.defaultdomain.Testnnnn --field_name primaryKey --dataType java.lang.String --Modifier private --annotation javax.persistence.Transient
buzzorfield create --type ~.app.shared.defaultdomain.Testnnnn --field_name ds --dataType java.lang.String --Modifier private --valueType String,String,String --annotation javax.persistence.Id,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty,javax.persistence.GeneratedValue --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty,generator.javax.persistence.GeneratedValue --value ds.javax.persistence.Column,ds.com.fasterxml.jackson.annotation.JsonProperty,UUIDGenerator.javax.persistence.GeneratedValue
buzzorfield create --type ~.app.shared.defaultdomain.Testnnnn --field_name address --dataType com.app.shared.location.Address --Modifier private --annotation javax.persistence.OneToOne,javax.persistence.JoinColumn  --key cascade.javax.persistence.OneToOne,fetch.javax.persistence.OneToOne,name.javax.persistence.JoinColumn,referencedColumnName.javax.persistence.JoinColumn --value javax.persistence.CascadeType$REFRESH#javax.persistence.OneToOne,javax.persistence.FetchType$LAZY#javax.persistence.OneToOne,adad.javax.persistence.JoinColumn,addressId.javax.persistence.JoinColumn --valueType javatype,javatype,string,string
buzzorfield create --type ~.app.shared.defaultdomain.Testnnnn --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --annotation javax.persistence.Transient,com.fasterxml.jackson.annotation.JsonIgnore
buzzorfield create --type ~.app.shared.defaultdomain.Testnnnn --field_name versionId --dataType Integer --Modifier private --annotation javax.persistence.Version,javax.persistence.Column,com.fasterxml.jackson.annotation.JsonProperty --key name.javax.persistence.Column,value.com.fasterxml.jackson.annotation.JsonProperty --value versionId.javax.persistence.Column,versionId.com.fasterxml.jackson.annotation.JsonProperty --valueType String,String
buzzorfield create --type ~.app.shared.defaultdomain.Testnnnn --field_name entityAudit --dataType com.app.shared.EntityAudit --Modifier private --annotation javax.persistence.Embedded,com.fasterxml.jackson.annotation.JsonIgnore --initializer "new EntityAudit()"
buzzorfield create --type ~.app.shared.defaultdomain.Testnnnn --field_name systemInfo --dataType com.app.shared.SystemInfo --Modifier private --annotation javax.persistence.Embedded --initializer "new SystemInfo()"
buzzorfield create --type ~.app.shared.defaultdomain.Testnnnn --field_name primaryDisplay --dataType String --Modifier private --annotation javax.persistence.Transient
methodoperation type getSetMethod --class ~.app.shared.defaultdomain.Testnnnn --variableName sfsf --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.defaultdomain.Testnnnn --variableName primaryKey --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.defaultdomain.Testnnnn --variableName ds --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.defaultdomain.Testnnnn --variableName versionId --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.defaultdomain.Testnnnn --variableName primaryDisplay --getterMethod false --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.defaultdomain.Testnnnn --variableName systemInfo --getterMethod true --setterMethod true
methodoperation type getSetMethod --class ~.app.shared.defaultdomain.Testnnnn --variableName address --getterMethod true --setterMethod true --direction UNIDIRECTION
methodoperation type hardDelete --entityName ~.app.shared.defaultdomain.Testnnnn
methodoperation type setValidator --class ~.app.shared.defaultdomain.Testnnnn
methodoperation type setLoggedUserInfo --class ~.app.shared.defaultdomain.Testnnnn --updateFieldName updatedBy --createFieldName createdBy --activeFieldName activeStatus --isAggregate false 
methodoperation type comparatorDefaultBody --class ~.app.shared.defaultdomain.Testnnnn
methodoperation type getPrimayDisplay --class ~.app.shared.defaultdomain.Testnnnn --variableName sfsf
methodoperation type toString --class ~.app.shared.defaultdomain.Testnnnn
methodoperation type hashCode --class ~.app.shared.defaultdomain.Testnnnn --primaryClass true
methodoperation type equals --class ~.app.shared.defaultdomain.Testnnnn --primaryClass true
buzzormethod add --toClass ~.app.shared.defaultdomain.Testnnnn --method_name isEntityValidated --modifier public --return_type boolean --method_body "return this.systemInfo.isEntityValidated();" --annotation com.fasterxml.jackson.annotation.JsonIgnore --key "" --value ""
class --abstract true --class ~.app.server.service.TestnnnnService
buzzorclass add --className ~.app.server.service.TestnnnnServiceImpl  --extends com.app.server.service.TestnnnnService --value_type string --annotation org.springframework.web.bind.annotation.RestController
Class createAnnotation --toClass ~.app.server.service.TestnnnnServiceImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype
Class createAnnotation --toClass ~.app.server.service.TestnnnnService --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for Testnnnn Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
Class createAnnotation --toClass ~.app.server.service.TestnnnnServiceImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Service for Testnnnn Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
interfacebuzzor add --InterfaceName ~.app.server.repository.TestnnnnRepository --genericType T --extends com.athena.server.repository.SearchInterface
buzzorclass add --className ~.app.server.repository.TestnnnnRepositoryImpl --implements --extends com.athena.server.repository.SearchInterfaceImpl --value_type string --implementsGenericType com.app.server.repository.TestnnnnRepository#com.app.shared.defaultdomain.Testnnnn --annotation org.springframework.stereotype.Repository
Class createAnnotation --toClass ~.app.server.repository.TestnnnnRepositoryImpl --annotation org.springframework.context.annotation.Scope --key value.org.springframework.context.annotation.Scope,proxyMode.org.springframework.context.annotation.Scope --value request.org.springframework.context.annotation.Scope#cfg#org.springframework.context.annotation.ScopedProxyMode$TARGET_CLASS#org.springframework.context.annotation.Scope --value_type string,javatype
Class createAnnotation --toClass ~.app.server.repository.TestnnnnRepository --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for Testnnnn Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
Class createAnnotation --toClass ~.app.server.repository.TestnnnnRepositoryImpl --annotation com.athena.annotation.SourceCodeAuthorClass --key createdBy.com.athena.annotation.SourceCodeAuthorClass,updatedBy.com.athena.annotation.SourceCodeAuthorClass,versionNumber.com.athena.annotation.SourceCodeAuthorClass,comments.com.athena.annotation.SourceCodeAuthorClass,complexity.com.athena.annotation.SourceCodeAuthorClass --value "nayan.chaudhari@algorhythm.co.in.com.athena.annotation.SourceCodeAuthorClass#cfg#.com.athena.annotation.SourceCodeAuthorClass#cfg#1.com.athena.annotation.SourceCodeAuthorClass#cfg#Repository for Testnnnn Transaction table.com.athena.annotation.SourceCodeAuthorClass#cfg#com.athena.annotation.Complexity$MEDIUM#com.athena.annotation.Complexity " --value_type String,String,String,String,javaType
buzzorfield create --type ~.app.server.repository.TestnnnnRepositoryImpl --field_name emfResource --dataType com.athena.config.server.helper.ResourceFactoryManagerHelper --Modifier private --annotation org.springframework.beans.factory.annotation.Autowired
methodoperation type ENTITY --entityName ~.app.shared.defaultdomain.Testnnnn --readOnly false --controllerClass ~.app.server.service.TestnnnnService  --controllerImplClass ~.app.server.service.TestnnnnServiceImpl --repositoryClass ~.app.server.repository.TestnnnnRepository --repositoryImplClass ~.app.server.repository.TestnnnnRepositoryImpl --methodType findAll --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.TestnnnnBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.defaultdomain.Testnnnn --readOnly false --controllerClass ~.app.server.service.TestnnnnService  --controllerImplClass ~.app.server.service.TestnnnnServiceImpl --repositoryClass ~.app.server.repository.TestnnnnRepository --repositoryImplClass ~.app.server.repository.TestnnnnRepositoryImpl --methodType show --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.TestnnnnBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.defaultdomain.Testnnnn --readOnly false --controllerClass ~.app.server.service.TestnnnnService  --controllerImplClass ~.app.server.service.TestnnnnServiceImpl --repositoryClass ~.app.server.repository.TestnnnnRepository --repositoryImplClass ~.app.server.repository.TestnnnnRepositoryImpl --methodType save --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.TestnnnnBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.defaultdomain.Testnnnn --readOnly false --controllerClass ~.app.server.service.TestnnnnService  --controllerImplClass ~.app.server.service.TestnnnnServiceImpl --repositoryClass ~.app.server.repository.TestnnnnRepository --repositoryImplClass ~.app.server.repository.TestnnnnRepositoryImpl --methodType delete --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.TestnnnnBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
methodoperation type ENTITY --entityName ~.app.shared.defaultdomain.Testnnnn --readOnly false --controllerClass ~.app.server.service.TestnnnnService  --controllerImplClass ~.app.server.service.TestnnnnServiceImpl --repositoryClass ~.app.server.repository.TestnnnnRepository --repositoryImplClass ~.app.server.repository.TestnnnnRepositoryImpl --methodType update --isMultitenant false --transactionType none --businessServiceClass ~.app.server.businessservice.TestnnnnBusinessService --isUserAccess false --isAggregateRoot true --isBiz false --isInheritance false --isConcreteClass false
namedQuery insert --toClass ~.app.shared.defaultdomain.Testnnnn --queryName Testnnnn.findByAdad --queryValue "select e from Testnnnn e where e.systemInfo.activeStatus=1 and e.address.addressId=:addressId"
methodoperation type namedQueryMethod --queryName Testnnnn.findByAdad --qvalue "select e from Testnnnn e where e.systemInfo.activeStatus=1 and e.address.addressId=:addressId" --qarameteres adad --typeOfParameteres java.lang.String --entityName ~.app.shared.defaultdomain.Testnnnn --controllerClass ~.app.server.service.TestnnnnService --controllerImplClass ~.app.server.service.TestnnnnServiceImpl --repositoryClass ~.app.server.repository.TestnnnnRepository --repositoryImplClass ~.app.server.repository.TestnnnnRepositoryImpl --businessServiceClass ~.app.server.businessservice.TestnnnnbzService --returnType java.util.List<com.app.shared.defaultdomain.Testnnnn> --isFindByID true --isUserAccess false --isMultitenant false --refEntity com.app.shared.defaultdomain.Address
namedQuery insert --toClass ~.app.shared.defaultdomain.Testnnnn --queryName Testnnnn.findById --queryValue "select e from Testnnnn e where e.systemInfo.activeStatus=1 and  e.ds =:ds"
methodoperation type namedQueryMethod --queryName Testnnnn.findById --qvalue "select e from Testnnnn e where e.systemInfo.activeStatus=1 and  e.ds =:ds" --qarameteres ds --typeOfParameteres java.lang.String --entityName ~.app.shared.defaultdomain.Testnnnn --controllerClass ~.app.server.service.TestnnnnService --controllerImplClass ~.app.server.service.TestnnnnServiceImpl --repositoryClass ~.app.server.repository.TestnnnnRepository --repositoryImplClass ~.app.server.repository.TestnnnnRepositoryImpl --businessServiceClass ~.app.server.businessservice.TestnnnnbzService --returnType com.app.shared.defaultdomain.Testnnnn --isFindByID true --isUserAccess false --isMultitenant false --refEntity com.app.shared.defaultdomain.Testnnnn
buzzproperties codeStatus --PropertyFileName status --key Testnnnn --value 0
buzzorclass add --className TestnnnnTestCase  --srcPath test
Class createAnnotation --toClass TestnnnnTestCase --annotation org.junit.runner.RunWith --key value.org.junit.runner.RunWith --value org.springframework.test.context.junit4.SpringJUnit4ClassRunner --value_type javaClass
Class createAnnotation --toClass TestnnnnTestCase --annotation org.springframework.test.context.web.WebAppConfiguration --key null.org.springframework.test.context.web.WebAppConfiguration --value null --value_type null
Class createAnnotation --toClass TestnnnnTestCase --annotation org.springframework.test.context.ContextConfiguration --key classes.org.springframework.test.context.ContextConfiguration --value com.app.config.WebConfigExtended --value_type javaClass
Class createAnnotation --toClass TestnnnnTestCase --annotation org.junit.FixMethodOrder --key value.org.junit.FixMethodOrder.org.junit.FixMethodOrder --value org.junit.runners.MethodSorters$NAME_ASCENDING#org.junit.FixMethodOrder --value_type javatype
ArrayAnnotation create --type TestnnnnTestCase --key value --varaiable_name "" --value org.springframework.test.context.support.DependencyInjectionTestExecutionListener,org.springframework.test.context.support.DirtiesContextTestExecutionListener,org.springframework.test.context.transaction.TransactionalTestExecutionListener --valueType javatype,javatype,javatype --annotation org.springframework.test.context.TestExecutionListeners --addTo class
buzzorfield create --type TestnnnnTestCase --field_name testnnnnRepository --dataType com.app.server.repository.TestnnnnRepository<com.app.shared.defaultdomain.Testnnnn> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name testnnnnRepository --valueType com.app.server.repository.TestnnnnRepository --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestnnnnTestCase --field_name runtimeLogInfoHelper --dataType com.athena.framework.server.helper.RuntimeLogInfoHelper --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name runtimeLogInfoHelper --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestnnnnTestCase --field_name entityValidator --dataType com.athena.framework.server.helper.EntityValidatorHelper<Object> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name entityValidator --valueType com.athena.framework.server.helper.RuntimeLogInfoHelper<Object> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestnnnnTestCase --field_name valueGenerator --dataType com.athena.framework.server.test.RandomValueGenerator --Modifier private --initializer "new com.athena.framework.server.test.RandomValueGenerator()"
buzzorfield create --type TestnnnnTestCase --field_name map --dataType java.util.HashMap<String,Object> --Modifier private --initializer "new HashMap<String,Object>()" --isStatic true
buzzorfield create --type TestnnnnTestCase --field_name methodCallStack --dataType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name methodCallStack --valueType com.spartan.healthmeter.entity.scheduler.ArtMethodCallStack --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
buzzorfield create --type TestnnnnTestCase --field_name session --dataType org.springframework.mock.web.MockHttpSession --Modifier protected --valueType javaType
buzzorfield create --type TestnnnnTestCase --field_name request --dataType org.springframework.mock.web.MockHttpServletRequest --Modifier protected --valueType javaType
buzzorfield create --type TestnnnnTestCase --field_name response --dataType org.springframework.mock.web.MockHttpServletResponse --Modifier protected --valueType javaType
buzzormethod add --toClass TestnnnnTestCase --method_name startSession --modifier protected --return_type void --method_body "session = new MockHttpSession();"
buzzormethod add --toClass TestnnnnTestCase --method_name endSession --modifier protected --return_type void --method_body "session.clearAttributes(); session.invalidate(); session = null;"
buzzormethod add --toClass TestnnnnTestCase --method_name startRequest --modifier protected --return_type void --method_body "request = new MockHttpServletRequest(); request.setSession(session); org.springframework.web.context.request.RequestContextHolder.setRequestAttributes(new org.springframework.web.context.request.ServletRequestAttributes(request));"
buzzormethod add --toClass TestnnnnTestCase --method_name endRequest --modifier protected --return_type void --method_body "((org.springframework.web.context.request.ServletRequestAttributes) org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()).requestCompleted(); org.springframework.web.context.request.RequestContextHolder.resetRequestAttributes(); request = null;"
buzzormethod add --toClass TestnnnnTestCase --method_name before --modifier public --return_type void --method_body "startSession(); startRequest(); setBeans();" --annotation org.junit.Before --key "" --value ""
buzzormethod add --toClass TestnnnnTestCase --method_name after --modifier public --return_type void --method_body "endSession(); endRequest();" --annotation org.junit.After --key "" --value ""
buzzormethod add --toClass TestnnnnTestCase --method_name setBeans --modifier private --return_type void --method_body "runtimeLogInfoHelper.createRuntimeLogUserInfo(1, "AAAAA", request.getRemoteHost());   org.junit.Assert.assertNotNull(runtimeLogInfoHelper);methodCallStack.setRequestId(java.util.UUID.randomUUID().toString().toUpperCase()); "
 Import add --toClass TestnnnnTestCase --importType com.app.shared.defaultdomain.Testnnnn
 Import add --toClass TestnnnnTestCase --importType com.athena.framework.shared.entity.web.entityInterface.CommonEntityInterface.RECORD_TYPE
buzzormethod add --toClass TestnnnnTestCase --method_name test1Save --modifier public --return_type void --method_body " try { Address address=new Address();address.setAddress1("epelMmm8n4Cn4tw6j2AqIaBAx8XxvGAuMBeOgA3fbcW5TtpuMW"); address.setAddress2("yW9FopG75c9Pu2AN6KYK2YUg933BtcoTa0dmA2e3s6OJJcwN0A"); address.setAddress3("IarFMgi4HjnmyEm5yzCDSva4zvbcXLs58L39GnRoFKRpeNMefA"); address.setAddressLabel("pJsykOBwRuT"); AddressType addresstype=new AddressType();addresstype.setAddressType("raVMXYovdRC3tWR1vMM9zHz6IGPZA8yWnAkcLuEgJzs7njVhEE"); addresstype.setAddressTypeDesc("TszSw0oJV6y2lcaPDz2qrVmOdQuy3F2uRGGHYkJ4alSXRX2jqb"); addresstype.setAddressTypeIcon("vkn41nhirxfSv1eYDhIGiWZzLGqT3crRfv1Lmv7XXgh6gk8OCo"); AddressType AddressTypeTest =addresstypeRepository.save(addresstype);map.put("AddressTypePrimaryKey", addresstype._getPrimarykey());City city=new City();city.setCityCode(2); city.setCityCodeChar2("fuVAy9RJdDJb3251OIMzm8hMKVJC7LQ1"); city.setCityDescription("TxGYRsXgSxQo32KW8ttk49EFMcfk7AnksR6P3KQ9TcVW56SWdL"); city.setCityFlag("IBZw41FRsTiu9KiytYBdTu56KIpjJDY8OTUgUBkMCUTxNWm0uU"); city.setCityLatitude(2); city.setCityLongitude(4); city.setCityName("73J9kzN9s6M1H1nUMGEp0ZjlqhCAVhbWGBxn6aiKzJEMkiNf3c"); Country country=new Country();country.setCapital("FCt7WREzHSwKYIsRcj8GOCqBx7ntmeE2"); country.setCapitalLatitude(0); country.setCapitalLongitude(2); country.setCountryCode1("8BD"); country.setCountryCode2("2H9"); country.setCountryFlag("SvDxRbnu1UPC63hOSf5BmZw6Lh72pKUkFB7xqeo1rXpXkRDUFu"); country.setCountryName("fSJZmuSTvgqlasLClmM4iylixvu88dyV5Bcs4nlGYZn31hZF7c"); country.setCurrencyCode("mXA"); country.setCurrencyName("DrgoIJtcnP7sL4axDnSBbBDnncx1ADYyw40P9XaPSpgxNxDlep"); country.setCurrencySymbol("MlFwpTUeHzBU9Md3BOBulktWbMzaXkxL"); country.setIsoNumeric(11); Country CountryTest =countryRepository.save(country);map.put("CountryPrimaryKey", country._getPrimarykey());State state=new State();state.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */state.setStateCapital("YWYkcZdq27WwycpMyNcdO26zLtW4ej4BtRHej7Y8UQP5aLchbT"); state.setStateCapitalLatitude(1); state.setStateCapitalLongitude(8); state.setStateCode(0); state.setStateCodeChar2("dI5nZrnuhqrJ7vO4Nznrni2ZPQ14SI9k"); state.setStateCodeChar3("NVYlRWOV8wogSbrRwyMZhoQCTFSLqTpt"); state.setStateDescription("xLZxOoiegY9MUpPrzV3l4CCLLjGGyJabDjHsGt4W0XsY7Zf7pj"); state.setStateFlag("IrXwEeigIgWNJUCCmsGTHAwmnQ7gwhYcmOswURMnPaThmNpX4Z"); state.setStateName("gIiujPoYFVz2sLQ9JgZ0UgzJjmkO26YHYuYUWWWxxOlrmyyxVs"); State StateTest =stateRepository.save(state);map.put("StatePrimaryKey", state._getPrimarykey());city.setCityCode(1); city.setCityCodeChar2("1Z3MXJIJZDBg4q0948Jt2x8IOwdtqLR3"); city.setCityDescription("VhvcX9E7vK0C1xIjtMtMFXW1ccwPIOH8Ff58td4xrZSqk0rO1H"); city.setCityFlag("2X7FyvfFkKtZYIblKFCWJ9ocQTnk3Rzn51csY8QWQqLoEAsvU7"); city.setCityLatitude(2); city.setCityLongitude(1); city.setCityName("EVleEPz0O2LpijOkYlgwevHxYXWcU61KD5alNohQVFdHb59kYQ"); city.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */city.setStateId((java.lang.String)StateTest._getPrimarykey()); /* ******Adding refrenced table data */City CityTest =cityRepository.save(city);map.put("CityPrimaryKey", city._getPrimarykey());address.setAddress1("4wmd8IEupeHlkyRiyxoxGy4wVnHGdcmsORDyJZ0m9FEdFM0VTK"); address.setAddress2("QStUGlPrJ6Yr0vZUt69wVDFEnVnWjmwdMU1SrthSvaELS74FBb"); address.setAddress3("lcNGXHD3CGYxIp5vhT1brj2Ru8ryJJPFMXAbdEycuSZCL72NaO"); address.setAddressLabel("rXvTU1C5n4F"); address.setAddressTypeId((java.lang.String)AddressTypeTest._getPrimarykey()); /* ******Adding refrenced table data */address.setCityId((java.lang.String)CityTest._getPrimarykey()); /* ******Adding refrenced table data */address.setCountryId((java.lang.String)CountryTest._getPrimarykey()); /* ******Adding refrenced table data */address.setLatitude("bKM87eAlyOohYjhXxuVQXwGqjAGc9Lo0KJCDdI7ilpJNdgRJmY"); address.setLongitude("7klPolTIYoYGoCsC2ohjW8aYOcmsCp3iJDuQPYK9gp7MZdqY3s"); address.setStateId((java.lang.String)StateTest._getPrimarykey()); address.setZipcode("FebN5e"); Testnnnn testnnnn=new Testnnnn();testnnnn.setAddress(addressRepository.save(address));map.put("AddressPrimaryKey", address._getPrimarykey());testnnnn.setSfsf("HelloWorld"); testnnnn.setEntityAudit(1, "xyz", RECORD_TYPE.ADD);testnnnn.setEntityValidator(entityValidator);testnnnn.isValid();testnnnnRepository.save(testnnnn); map.put("TestnnnnPrimaryKey", testnnnn._getPrimarykey());} catch (com.athena.framework.server.exception.biz.SpartanConstraintViolationException e) {org.junit.Assert.fail(e.getMessage()); }  catch (java.lang.Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.Address
buzzorfield create --type TestnnnnTestCase --field_name addressRepository --dataType com.app.server.repository.AddressRepository<com.app.shared.location.Address> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name addressRepository --valueType com.app.server.repository.AddressRepository<com.app.shared.location.Address> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.AddressType
buzzorfield create --type TestnnnnTestCase --field_name addresstypeRepository --dataType com.app.server.repository.AddressTypeRepository<com.app.shared.location.AddressType> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name addresstypeRepository --valueType com.app.server.repository.AddressTypeRepository<com.app.shared.location.AddressType> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.City
buzzorfield create --type TestnnnnTestCase --field_name cityRepository --dataType com.app.server.repository.CityRepository<com.app.shared.location.City> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name cityRepository --valueType com.app.server.repository.CityRepository<com.app.shared.location.City> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.Country
buzzorfield create --type TestnnnnTestCase --field_name countryRepository --dataType com.app.server.repository.CountryRepository<com.app.shared.location.Country> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name countryRepository --valueType com.app.server.repository.CountryRepository<com.app.shared.location.Country> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.State
buzzorfield create --type TestnnnnTestCase --field_name stateRepository --dataType com.app.server.repository.StateRepository<com.app.shared.location.State> --Modifier private --valueType 
fieldAnnotation create --type TestnnnnTestCase --field_name stateRepository --valueType com.app.server.repository.StateRepository<com.app.shared.location.State> --annotation org.springframework.beans.factory.annotation.Autowired --key "" --value ""
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.Country
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.Country
 Import add --toClass TestnnnnTestCase --importType com.app.shared.location.State
buzzormethod add --toClass TestnnnnTestCase --method_name test2Update --modifier public --return_type void --method_body " try { org.junit.Assert.assertNotNull(map.get("TestnnnnPrimaryKey"));Testnnnn testnnnn=testnnnnRepository.findById((java.lang.String)map.get("TestnnnnPrimaryKey"));testnnnn.setSfsf("HelloWorld");testnnnn.setVersionId(1);testnnnn.setEntityAudit(1, "xyz", RECORD_TYPE.UPDATE);testnnnnRepository.update(testnnnn);} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch (java.lang.Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass TestnnnnTestCase --method_name test3FindById --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("TestnnnnPrimaryKey"));testnnnnRepository.findById((java.lang.String)map.get("TestnnnnPrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
buzzormethod add --toClass TestnnnnTestCase --method_name test4Delete --modifier public --return_type void --method_body " try {org.junit.Assert.assertNotNull(map.get("TestnnnnPrimaryKey"));testnnnnRepository.delete((java.lang.String)map.get("TestnnnnPrimaryKey"));/* Deleting refrenced data */addressRepository.delete((java.lang.String)map.get("AddressPrimaryKey"));/* Deleting refrenced data */cityRepository.delete((java.lang.String)map.get("CityPrimaryKey"));/* Deleting refrenced data */stateRepository.delete((java.lang.String)map.get("StatePrimaryKey"));/* Deleting refrenced data */countryRepository.delete((java.lang.String)map.get("CountryPrimaryKey"));/* Deleting refrenced data */addresstypeRepository.delete((java.lang.String)map.get("AddressTypePrimaryKey"));} catch (com.athena.framework.server.exception.repository.SpartanPersistenceException e) {org.junit.Assert.fail(e.getMessage());  } catch(Exception e) {org.junit.Assert.fail(e.getMessage());   } "  --annotation org.junit.Test --key "" --value ""
quit
// Spring Roo 1.2.5.RELEASE [rev 8341dc2] log closed at 2016-02-26 13:39:30
// Spring Roo 1.2.5.RELEASE [rev 8341dc2] log opened at 2016-02-26 13:39:30
// script --file testpro.cf
// Spring Roo 1.2.5.RELEASE [rev 8341dc2] log closed at 2016-02-26 13:39:30
